// Package docs GENERATED BY THE COMMAND ABOVE; DO NOT EDIT
// This file was generated by swaggo/swag
package docs

import (
	_ "github.com/skskuzan/rest_api/StructUser.go"
)

// Package classification CRUD
//
// Documentation of our awesome API.
//
//     Schemes: http
//     BasePath: /api/v1/
//     Version: 1.0.0
//     Host: localhost:10000
//
//     Consumes:
//     - application/json
//
//     Produces:
//     - application/json
//
//
// swagger:meta

// swagger:route GET /db/{id} users getSTD
// returns user by specified id
// Produces:
//     - application/json
// responses:
//      200: userGetResponse
//      400: badRequest

// swagger:parameters getSTD
type UserIdParam struct {
	// Specifies uuid for a user
	//
	// unique: true
	// in: path
	// example: 3ca4ce84-ed71-42aa-8d1a-c0e001d3b8b4
	Id string `json:"id"`
}

// Error struct with error explanation string
// swagger:response badRequest
type BadRequestResponseWrapper struct {
	// in:body
	Body string
}

// swagger:response userGetResponse
type userGetResponse struct {
	// Specifies uuid for a user
	//
	// in: body
	//
	Body StructUser.User
}

// swagger:route GET /db users getDB
// returns users
// Produces:
//     - application/json
// responses:
//      200: UsersGetResponse
//      400: badRequest

// swagger:response UsersGetResponse
type UsersGetResponse struct {
	//in: body
	Body []StructUser.User
}

// swagger:route POST /db users createSTD
// Produces:
//     - application/json
// responses:
//      400: badRequest

// swagger:parameters createSTD
type UserPostParam struct {
	// in: body
	Body StructUser.User
}

// swagger:route PUT /db/{id} users changeSTD
// Produces:
//     - application/json
// responses:
//      400: badRequest

// swagger:parameters changeSTD
type UserPutParam struct {
	//in: body
	Body StructUser.User
}

// swagger:route DELETE /del/{id} users deleteSTD
// Produces:
//     - application/json
// responses:
//      400: badRequest

// swagger:parameters deleteSTD
type UserDelParam struct {
	// Specifies uuid for a user
	//
	// unique: true
	// in: path
	// example: 3ca4ce84-ed71-42aa-8d1a-c0e001d3b8b4
	Id string `json:"id"`
}

var doc = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {}
}`
